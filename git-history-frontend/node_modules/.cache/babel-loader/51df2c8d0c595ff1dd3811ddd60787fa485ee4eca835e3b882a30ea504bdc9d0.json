{"ast":null,"code":"var _jsxFileName = \"/Users/jason/visual-git-history-viewer/git-history-frontend/src/components/GitGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GitGraph({\n  commits,\n  onSelectCommit\n}) {\n  _s();\n  useEffect(() => {\n    if (commits.length === 0) return;\n\n    // Clear existing SVG (if any) before drawing\n    d3.select(\"#git-graph\").html(\"\");\n    const circleRadius = 15;\n    const circleSpacing = 50;\n    const svgWidth = 800;\n    const svgHeight = commits.length * circleSpacing + circleRadius * 2;\n    const svg = d3.select(\"#git-graph\").append(\"svg\").attr(\"width\", svgWidth).attr(\"height\", svgHeight);\n\n    // Lines connecting commits\n    svg.selectAll(\"line\").data(commits.slice(1)).enter().append(\"line\").attr(\"x1\", svgWidth / 2).attr(\"y1\", (d, i) => i * circleSpacing + circleRadius).attr(\"x2\", svgWidth / 2).attr(\"y2\", (d, i) => (i + 1) * circleSpacing).attr(\"stroke\", \"#999\").attr(\"stroke-width\", 2);\n\n    // Circles representing commits\n    const circles = svg.selectAll(\"circle\").data(commits).enter().append(\"circle\").attr(\"cx\", svgWidth / 2).attr(\"cy\", (d, i) => i * circleSpacing + circleRadius).attr(\"r\", circleRadius).attr(\"fill\", \"#3498db\").attr(\"stroke\", \"#2980b9\").attr(\"stroke-width\", 3);\n\n    // Hover effects\n    circles.on(\"mouseover\", function () {\n      d3.select(this).attr(\"fill\", \"#e74c3c\");\n    }).on(\"mouseout\", function () {\n      d3.select(this).attr(\"fill\", \"#3498db\");\n    }).on(\"click\", (event, d) => {\n      onSelectCommit(d);\n    });\n\n    // Commit date and message\n    svg.selectAll(\"text.date\").data(commits).enter().append(\"text\").attr(\"class\", \"date\").attr(\"x\", svgWidth / 2 + circleRadius + 10).attr(\"y\", (d, i) => i * circleSpacing + circleRadius).attr(\"alignment-baseline\", \"middle\").text(d => new Date(d.commit.author.date).toLocaleDateString());\n    svg.selectAll(\"text.message\").data(commits).enter().append(\"text\").attr(\"class\", \"message\").attr(\"x\", svgWidth / 2 + circleRadius + 100) // Adjust for better positioning\n    .attr(\"y\", (d, i) => i * circleSpacing + circleRadius).attr(\"alignment-baseline\", \"middle\").attr(\"text-anchor\", \"start\").text(d => d.commit.message.split(\"\\n\")[0]) // Display only the first line of the commit message\n    .attr(\"clip-path\", \"url(#clip)\");\n\n    // Define a clip-path to truncate long commit messages\n    svg.append(\"defs\").append(\"clipPath\").attr(\"id\", \"clip\").append(\"rect\").attr(\"x\", svgWidth / 2 + circleRadius + 100).attr(\"y\", 0).attr(\"width\", svgWidth - (svgWidth / 2 + circleRadius + 120)).attr(\"height\", svgHeight);\n  }, [commits, onSelectCommit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"git-graph\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}\n_s(GitGraph, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = GitGraph;\nexport default GitGraph;\nvar _c;\n$RefreshReg$(_c, \"GitGraph\");","map":{"version":3,"names":["React","useEffect","d3","jsxDEV","_jsxDEV","GitGraph","commits","onSelectCommit","_s","length","select","html","circleRadius","circleSpacing","svgWidth","svgHeight","svg","append","attr","selectAll","data","slice","enter","d","i","circles","on","event","text","Date","commit","author","date","toLocaleDateString","message","split","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jason/visual-git-history-viewer/git-history-frontend/src/components/GitGraph.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport * as d3 from 'd3';\n\nfunction GitGraph({ commits, onSelectCommit }) {\n    useEffect(() => {\n        if (commits.length === 0) return;\n\n        // Clear existing SVG (if any) before drawing\n        d3.select(\"#git-graph\").html(\"\");\n\n        const circleRadius = 15;\n        const circleSpacing = 50;\n        const svgWidth = 800;\n        const svgHeight = commits.length * circleSpacing + circleRadius * 2;\n\n        const svg = d3.select(\"#git-graph\")\n            .append(\"svg\")\n            .attr(\"width\", svgWidth)\n            .attr(\"height\", svgHeight);\n\n        // Lines connecting commits\n        svg.selectAll(\"line\")\n            .data(commits.slice(1))\n            .enter()\n            .append(\"line\")\n            .attr(\"x1\", svgWidth / 2)\n            .attr(\"y1\", (d, i) => i * circleSpacing + circleRadius)\n            .attr(\"x2\", svgWidth / 2)\n            .attr(\"y2\", (d, i) => (i + 1) * circleSpacing)\n            .attr(\"stroke\", \"#999\")\n            .attr(\"stroke-width\", 2);\n\n        // Circles representing commits\n        const circles = svg.selectAll(\"circle\")\n            .data(commits)\n            .enter()\n            .append(\"circle\")\n            .attr(\"cx\", svgWidth / 2)\n            .attr(\"cy\", (d, i) => i * circleSpacing + circleRadius)\n            .attr(\"r\", circleRadius)\n            .attr(\"fill\", \"#3498db\")\n            .attr(\"stroke\", \"#2980b9\")\n            .attr(\"stroke-width\", 3);\n\n        // Hover effects\n        circles.on(\"mouseover\", function() {\n                d3.select(this).attr(\"fill\", \"#e74c3c\");\n            })\n            .on(\"mouseout\", function() {\n                d3.select(this).attr(\"fill\", \"#3498db\");\n            })\n            .on(\"click\", (event, d) => {\n                onSelectCommit(d);\n            });\n\n        // Commit date and message\n        svg.selectAll(\"text.date\")\n            .data(commits)\n            .enter()\n            .append(\"text\")\n            .attr(\"class\", \"date\")\n            .attr(\"x\", svgWidth / 2 + circleRadius + 10)\n            .attr(\"y\", (d, i) => i * circleSpacing + circleRadius)\n            .attr(\"alignment-baseline\", \"middle\")\n            .text(d => new Date(d.commit.author.date).toLocaleDateString());\n\n        svg.selectAll(\"text.message\")\n            .data(commits)\n            .enter()\n            .append(\"text\")\n            .attr(\"class\", \"message\")\n            .attr(\"x\", svgWidth / 2 + circleRadius + 100) // Adjust for better positioning\n            .attr(\"y\", (d, i) => i * circleSpacing + circleRadius)\n            .attr(\"alignment-baseline\", \"middle\")\n            .attr(\"text-anchor\", \"start\")\n            .text(d => d.commit.message.split(\"\\n\")[0]) // Display only the first line of the commit message\n            .attr(\"clip-path\", \"url(#clip)\");\n\n        // Define a clip-path to truncate long commit messages\n        svg.append(\"defs\")\n            .append(\"clipPath\")\n            .attr(\"id\", \"clip\")\n            .append(\"rect\")\n            .attr(\"x\", svgWidth / 2 + circleRadius + 100)\n            .attr(\"y\", 0)\n            .attr(\"width\", svgWidth - (svgWidth / 2 + circleRadius + 120))\n            .attr(\"height\", svgHeight);\n\n    }, [commits, onSelectCommit]);\n\n    return (\n        <div id=\"git-graph\"></div>\n    );\n}\n\nexport default GitGraph;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}